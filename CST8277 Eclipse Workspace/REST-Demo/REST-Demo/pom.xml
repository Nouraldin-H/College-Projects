<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.algonquincollege.cst8277</groupId>
  <artifactId>REST-Demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>REST-Demo</name>
  <packaging>war</packaging>
  <description>Mavenized Jakarta EE REST Demo</description>

  <!-- Why is everything a property?  Because hard-coded values become part of
      Maven's immutable Model object and then their contents can't be changed.
      However, if the value is set in a user-defined property BEFORE the Model
      object is created, then it is possible to do:  mvn clean compile -Dfoo.bar.version=1.2.3
      in order to (say for example) test out a newer version of some dependency
      without having to change the pom.xml.
  -->
    
  <properties>
      <!-- Maven properties -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
      <maven.war.plugin.version>3.3.2</maven.war.plugin.version>
      <maven.compiler.release>21</maven.compiler.release>
      <maven.compiler.target>21</maven.compiler.target>    
      <maven.project.info.reports.plugin.version>2.9</maven.project.info.reports.plugin.version>
      <maven.surefire.plugin.version>2.22.2</maven.surefire.plugin.version>
      <failOnMissingWebXml>false</failOnMissingWebXml>
    
      <!-- code properties -->
      <slf4j.version>1.7.29</slf4j.version>
      <logback.version>1.2.3</logback.version>
      <jersey.version>3.0.15</jersey.version>
      <jackson.version>2.17.1</jackson.version>
      <jakartaee.api.version>9.0.0</jakartaee.api.version>
    
      <!-- test properties -->
      <junit.version>5.7.0</junit.version>
      <org.hamcrest.version>2.2</org.hamcrest.version>
  </properties>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <version>${jakartaee.api.version}</version>
        <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jakarta-xmlbind-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
      <artifactId>jackson-jakarta-rs-json-provider</artifactId>
    </dependency>
    <!-- test dependencies -->
      <!-- test dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${org.hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${org.hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey.version}</version>
        <scope>test</scope>
      </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>${maven.compiler.release}</release>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <forkCount>0</forkCount>
          <argLine>-Xmx1024m</argLine>
          <includes>
            <include>*TestSuite.java</include> <!-- Pattern of Test class' name -->
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
    </plugins>
  </build>
  
  <!-- Generate HTML Report -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven.project.info.reports.plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>
  
</project>